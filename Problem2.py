# Problem 2
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 # and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum 
# of the even-valued terms./Users/nono/Documents/Study/Euler/Problem2.py

# create list of fibonacci numbers

def fibo(num):
    list = [1, 2]
    y = 0
    # go through the list and add the even numbers
    while y < num:
        y = list[-1]+list[-2]
        if y < num:
            list.append(y)
    return list

def sum_even(num):
    list = fibo(num)
    counter = 0
    for item in list:
        if item%2 == 0:
            counter += item
    print counter

sum_even(4000000)